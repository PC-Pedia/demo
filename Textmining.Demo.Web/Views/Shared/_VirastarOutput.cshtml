@model List<TokenInfo>
@{
    Layout = null;
}
<style>
    .has-suggestions {
        border-bottom: 2px solid #f44336;
        -ms-border-radius: 5px;
        border-radius: 5px;
        /*margin-left: 5px;*/
    }

    .has-refine {
        border-bottom: 2px solid #00C853;
        -ms-border-radius: 5px;
        border-radius: 5px;
    }

    .has-suggestions-real {
        border-bottom: 2px solid #40c4ff;
        -ms-border-radius: 5px;
        border-radius: 5px;
    }

    tr td:first-child {
        padding-left: 10px;
        font-weight: bold;
        white-space: nowrap;
    }

    tr td:last-child {
        width: 1%;
        white-space: nowrap;
        font-size: 80%;
    }
</style>
<div style="display: inline-block">
    @foreach (var tokenInfo in Model)
    {

        if (tokenInfo.IsChanged)
        {
            var title = $"<span class='text-mute'>{tokenInfo.EditList.Last().SuggestedText}</span>";
            var content = tokenInfo.EditList.Last().Description;
            if (tokenInfo.EditList.Count > 1)
            {
                title = "<span class='text-mute'>چند پیشنهاد وجود دارد:</span>";
                content = "<table style=\"width: 100%;\">";
                foreach (EditItem item in tokenInfo.EditList)
                {
                    //string desc = item.EditType == EditType.SpellCorrection ? "اصلاح اشتباه املائی" : item.Description;
                    content += $"<tr><td class=\"block\">{item.SuggestedText}</td><td class=\"block\">{item.Description}</td></tr>";
                }
                content += "</table>";
            }
            var firstEd = tokenInfo.EditList.FirstOrDefault();

            var style = firstEd != null && tokenInfo.EditList.Any(ed => ed.EditType == EditType.SpellCorrection || ed.EditType == EditType.WordSuggestion)
                        ? (firstEd.Description.StartsWith("پیشنهاد") || firstEd.Description.StartsWith("شکل صحیح کلمه") ? "has-suggestions-real" : "has-suggestions")
                        : "has-refine";
            <span class="@style"
                  data-trigger="hover"
                  data-toggle="popover"
                  data-placement="top"
                  data-html="true"
                  style=""
                  title="@title"
                  data-content="@content">@tokenInfo.OriginalText</span><!--
            -->}
            else
            {@tokenInfo.OriginalText}

        if (@tokenInfo.OriginalText.Contains('\n'))
        {
            <br />
        }
    }
</div>
<div style="font-size: 80%">
    <br />
    <span style="font-weight: bold; margin-left: 8px">راهنما: </span><span> </span>
    <span class="has-refine">اصلاح نویسه‌های غیراستاندارد یا فاصله‌گذاری</span><span> ، </span>
    <span class="has-suggestions-real">پیشنهاد جایگزین کردن واژه یا پیوسته‌نویسی</span><span> ، </span>
    <span class="has-suggestions">اصلاح اشتباهات املائی یا تایپی</span>
</div>
<partial name="_ErrorReportButton" />

<script>

    $(function () {
        $('span[data-toggle="popover"]').popover();
    })
</script>
